package user_module

file_number 0 "fake_file.x"

fn ____user_module__popcount_counted_for_0_body(i: bits[8], c: bits[8], n: bits[8]) -> bits[8] {
  literal.4: bits[8] = literal(value=0, id=4)
  add.5: bits[8] = add(i, literal.4, id=5)
  shrl.8: bits[8] = shrl(n, add.5, id=8, pos=[(0,5,12)])
  literal.9: bits[8] = literal(value=1, id=9, pos=[(0,5,23)])
  and.10: bits[8] = and(shrl.8, literal.9, id=10, pos=[(0,5,18)])
  ret add.11: bits[8] = add(c, and.10, id=11, pos=[(0,5,6)])
}

fn __user_module__popcount(n: bits[8]) -> bits[8] {
  literal.2: bits[8] = literal(value=0, id=2, pos=[(0,6,7)])
  ret counted_for.12: bits[8] = counted_for(literal.2, trip_count=8, stride=1, body=____user_module__popcount_counted_for_0_body, invariant_args=[n], id=12)
}

top fn __user_module__user_module(io_in: bits[8]) -> bits[8] {
  ret invoke.14: bits[8] = invoke(io_in, to_apply=__user_module__popcount, id=14, pos=[(0,20,10)])
}
